# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import swagger_server.controllers.customer_pb2 as customer__pb2


class CustomerDatabaseServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetData = channel.unary_unary(
                '/CustomerDatabaseServer/GetData',
                request_serializer=customer__pb2.GetDataRequest.SerializeToString,
                response_deserializer=customer__pb2.GetDataResponse.FromString,
                )
        self.InsertData = channel.unary_unary(
                '/CustomerDatabaseServer/InsertData',
                request_serializer=customer__pb2.InsertDataRequest.SerializeToString,
                response_deserializer=customer__pb2.InsertDataResponse.FromString,
                )
        self.UpdateData = channel.unary_unary(
                '/CustomerDatabaseServer/UpdateData',
                request_serializer=customer__pb2.UpdateDataRequest.SerializeToString,
                response_deserializer=customer__pb2.UpdateDataResponse.FromString,
                )
        self.DeleteData = channel.unary_unary(
                '/CustomerDatabaseServer/DeleteData',
                request_serializer=customer__pb2.DeleteDataRequest.SerializeToString,
                response_deserializer=customer__pb2.DeleteDataResponse.FromString,
                )


class CustomerDatabaseServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomerDatabaseServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetData,
                    request_deserializer=customer__pb2.GetDataRequest.FromString,
                    response_serializer=customer__pb2.GetDataResponse.SerializeToString,
            ),
            'InsertData': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertData,
                    request_deserializer=customer__pb2.InsertDataRequest.FromString,
                    response_serializer=customer__pb2.InsertDataResponse.SerializeToString,
            ),
            'UpdateData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateData,
                    request_deserializer=customer__pb2.UpdateDataRequest.FromString,
                    response_serializer=customer__pb2.UpdateDataResponse.SerializeToString,
            ),
            'DeleteData': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteData,
                    request_deserializer=customer__pb2.DeleteDataRequest.FromString,
                    response_serializer=customer__pb2.DeleteDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CustomerDatabaseServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomerDatabaseServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerDatabaseServer/GetData',
            customer__pb2.GetDataRequest.SerializeToString,
            customer__pb2.GetDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerDatabaseServer/InsertData',
            customer__pb2.InsertDataRequest.SerializeToString,
            customer__pb2.InsertDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerDatabaseServer/UpdateData',
            customer__pb2.UpdateDataRequest.SerializeToString,
            customer__pb2.UpdateDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerDatabaseServer/DeleteData',
            customer__pb2.DeleteDataRequest.SerializeToString,
            customer__pb2.DeleteDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
