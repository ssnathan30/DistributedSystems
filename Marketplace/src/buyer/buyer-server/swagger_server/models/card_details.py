# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CardDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, card_number: int=None, expiration_date: str=None, buyer_id: int=None):  # noqa: E501
        """CardDetails - a model defined in Swagger

        :param name: The name of this CardDetails.  # noqa: E501
        :type name: str
        :param card_number: The card_number of this CardDetails.  # noqa: E501
        :type card_number: int
        :param expiration_date: The expiration_date of this CardDetails.  # noqa: E501
        :type expiration_date: str
        :param buyer_id: The buyer_id of this CardDetails.  # noqa: E501
        :type buyer_id: int
        """
        self.swagger_types = {
            'name': str,
            'card_number': int,
            'expiration_date': str,
            'buyer_id': int
        }

        self.attribute_map = {
            'name': 'name',
            'card_number': 'card_number',
            'expiration_date': 'expiration_date',
            'buyer_id': 'buyer_id'
        }

        self._name = name
        self._card_number = card_number
        self._expiration_date = expiration_date
        self._buyer_id = buyer_id

    @classmethod
    def from_dict(cls, dikt) -> 'CardDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The card_details of this CardDetails.  # noqa: E501
        :rtype: CardDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this CardDetails.


        :return: The name of this CardDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CardDetails.


        :param name: The name of this CardDetails.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def card_number(self) -> int:
        """Gets the card_number of this CardDetails.


        :return: The card_number of this CardDetails.
        :rtype: int
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number: int):
        """Sets the card_number of this CardDetails.


        :param card_number: The card_number of this CardDetails.
        :type card_number: int
        """

        self._card_number = card_number

    @property
    def expiration_date(self) -> str:
        """Gets the expiration_date of this CardDetails.


        :return: The expiration_date of this CardDetails.
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date: str):
        """Sets the expiration_date of this CardDetails.


        :param expiration_date: The expiration_date of this CardDetails.
        :type expiration_date: str
        """
        if expiration_date is None:
            raise ValueError("Invalid value for `expiration_date`, must not be `None`")  # noqa: E501

        self._expiration_date = expiration_date

    @property
    def buyer_id(self) -> int:
        """Gets the buyer_id of this CardDetails.


        :return: The buyer_id of this CardDetails.
        :rtype: int
        """
        return self._buyer_id

    @buyer_id.setter
    def buyer_id(self, buyer_id: int):
        """Sets the buyer_id of this CardDetails.


        :param buyer_id: The buyer_id of this CardDetails.
        :type buyer_id: int
        """
        if buyer_id is None:
            raise ValueError("Invalid value for `buyer_id`, must not be `None`")  # noqa: E501

        self._buyer_id = buyer_id
