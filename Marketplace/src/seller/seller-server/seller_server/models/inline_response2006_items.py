# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from seller_server.models.base_model_ import Model
from seller_server import util


class InlineResponse2006Items(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, item_id: str=None, item_name: str=None, item_category: str=None, keywords: List[str]=None, condition: str=None, sale_price: float=None, quantity: int=None, seller_id: str=None):  # noqa: E501
        """InlineResponse2006Items - a model defined in Swagger

        :param item_id: The item_id of this InlineResponse2006Items.  # noqa: E501
        :type item_id: str
        :param item_name: The item_name of this InlineResponse2006Items.  # noqa: E501
        :type item_name: str
        :param item_category: The item_category of this InlineResponse2006Items.  # noqa: E501
        :type item_category: str
        :param keywords: The keywords of this InlineResponse2006Items.  # noqa: E501
        :type keywords: List[str]
        :param condition: The condition of this InlineResponse2006Items.  # noqa: E501
        :type condition: str
        :param sale_price: The sale_price of this InlineResponse2006Items.  # noqa: E501
        :type sale_price: float
        :param quantity: The quantity of this InlineResponse2006Items.  # noqa: E501
        :type quantity: int
        :param seller_id: The seller_id of this InlineResponse2006Items.  # noqa: E501
        :type seller_id: str
        """
        self.swagger_types = {
            'item_id': str,
            'item_name': str,
            'item_category': str,
            'keywords': List[str],
            'condition': str,
            'sale_price': float,
            'quantity': int,
            'seller_id': str
        }

        self.attribute_map = {
            'item_id': 'item_id',
            'item_name': 'item_name',
            'item_category': 'item_category',
            'keywords': 'keywords',
            'condition': 'condition',
            'sale_price': 'sale_price',
            'quantity': 'quantity',
            'seller_id': 'seller_id'
        }

        self._item_id = item_id
        self._item_name = item_name
        self._item_category = item_category
        self._keywords = keywords
        self._condition = condition
        self._sale_price = sale_price
        self._quantity = quantity
        self._seller_id = seller_id

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2006Items':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_6_items of this InlineResponse2006Items.  # noqa: E501
        :rtype: InlineResponse2006Items
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_id(self) -> str:
        """Gets the item_id of this InlineResponse2006Items.


        :return: The item_id of this InlineResponse2006Items.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id: str):
        """Sets the item_id of this InlineResponse2006Items.


        :param item_id: The item_id of this InlineResponse2006Items.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def item_name(self) -> str:
        """Gets the item_name of this InlineResponse2006Items.


        :return: The item_name of this InlineResponse2006Items.
        :rtype: str
        """
        return self._item_name

    @item_name.setter
    def item_name(self, item_name: str):
        """Sets the item_name of this InlineResponse2006Items.


        :param item_name: The item_name of this InlineResponse2006Items.
        :type item_name: str
        """

        self._item_name = item_name

    @property
    def item_category(self) -> str:
        """Gets the item_category of this InlineResponse2006Items.


        :return: The item_category of this InlineResponse2006Items.
        :rtype: str
        """
        return self._item_category

    @item_category.setter
    def item_category(self, item_category: str):
        """Sets the item_category of this InlineResponse2006Items.


        :param item_category: The item_category of this InlineResponse2006Items.
        :type item_category: str
        """

        self._item_category = item_category

    @property
    def keywords(self) -> List[str]:
        """Gets the keywords of this InlineResponse2006Items.


        :return: The keywords of this InlineResponse2006Items.
        :rtype: List[str]
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords: List[str]):
        """Sets the keywords of this InlineResponse2006Items.


        :param keywords: The keywords of this InlineResponse2006Items.
        :type keywords: List[str]
        """

        self._keywords = keywords

    @property
    def condition(self) -> str:
        """Gets the condition of this InlineResponse2006Items.


        :return: The condition of this InlineResponse2006Items.
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition: str):
        """Sets the condition of this InlineResponse2006Items.


        :param condition: The condition of this InlineResponse2006Items.
        :type condition: str
        """

        self._condition = condition

    @property
    def sale_price(self) -> float:
        """Gets the sale_price of this InlineResponse2006Items.


        :return: The sale_price of this InlineResponse2006Items.
        :rtype: float
        """
        return self._sale_price

    @sale_price.setter
    def sale_price(self, sale_price: float):
        """Sets the sale_price of this InlineResponse2006Items.


        :param sale_price: The sale_price of this InlineResponse2006Items.
        :type sale_price: float
        """

        self._sale_price = sale_price

    @property
    def quantity(self) -> int:
        """Gets the quantity of this InlineResponse2006Items.


        :return: The quantity of this InlineResponse2006Items.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this InlineResponse2006Items.


        :param quantity: The quantity of this InlineResponse2006Items.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def seller_id(self) -> str:
        """Gets the seller_id of this InlineResponse2006Items.


        :return: The seller_id of this InlineResponse2006Items.
        :rtype: str
        """
        return self._seller_id

    @seller_id.setter
    def seller_id(self, seller_id: str):
        """Sets the seller_id of this InlineResponse2006Items.


        :param seller_id: The seller_id of this InlineResponse2006Items.
        :type seller_id: str
        """

        self._seller_id = seller_id
